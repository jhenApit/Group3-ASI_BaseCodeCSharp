@using Microsoft.AspNetCore.Identity
@using Basecode.Data.Enums;
@inject UserManager<IdentityUser> UserManager

@using Basecode.Data.ViewModels
@model DashboardView

@{
    ViewData["Title"] = "Dashboard";
    Layout = "~/Views/Shared/_SideBarAdmin.cshtml";
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/admin-dashboard.css" />
}

<body>
    <div id="container" class="dashboard">
        <div id="header" class="top-header shadow-sm">
            <div class="ps-5">
                <h1 class="m-0 ps-2">@ViewData["Title"]</h1>
            </div>
            <div class="header-details d-flex">
                <p class="welcome">WELCOME</p>
                @{
                    string fullName = @Model.User.Name;
                    string[] fullNameValues = fullName.Split(' ');
                    string FirstName = fullNameValues[0].Trim();

                }
                <p class="name mr-3">
                    <a id="manage" class="nav-link text-dark text-capitalize pr-3" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@FirstName</a>
                </p>
            </div>
        </div>

        <div class="pt-5"></div><div class="pt-4"></div> <!-- a buffer to push content down so that header won't cover it' -->
        <div class="container">
            <!--Upper Cards-->
            <div class="row justify-content-around mt-3">
                <div class="col-4">
                    <a asp-controller="Hr" asp-action="JobPostList">
                        <div class="dashboard-cards p-3">
                            <h3 class="card-title">JOB POSTS</h3>
                            <div class="card-content p-3">
                                <i class='bx bxs-user-check card-icon'></i>
                                <p class="card-value p-3">@Model.JobCount</p>
                            </div>
                        </div>
                    </a>
                </div>
                <div class="col-4">
                    <a asp-controller="Hr" asp-action="JobApplicantsOverview">
                        <div class="dashboard-cards p-3">
                            <h3 class="card-title">CANDIDATES</h3>
                            <div class="card-content p-3">
                                <i class='bx bxs-briefcase-alt-2 card-icon'></i>
                                <p class="card-value p-3">@Model.Candidates.Count()</p>
                            </div>
                        </div>
                    </a>
                </div>
                <div class="col-4">
                    <div class="dashboard-cards p-3">
                        <h3 class="card-title">NEW HIRES</h3>
                        <div class="card-content p-3">
                            <i class='bx bxs-user-rectangle card-icon'></i>
                            <p class="card-value p-3">@Model.EmployeeCount</p>
                        </div>
                    </div>
                </div>
            </div>

            <!--Bottom Cards-->
            <div class="row justify-content-around mt-3">
                <div class="col-4 mb-3">
                    <div class="dashboard-cards bottom-card p-3">
                        <h3 class="card-title">STATUSES</h3>
                        <div class="chart-container mt-4">
                            <canvas class="applicant-chart"></canvas>
                            @{
                                var countByStatus = Model.Candidates
                                .GroupBy(m => m.ApplicationStatus)
                                .Select(g => new
                                {
                                    ApplicationStatus = g.Key,
                                    Count = g.Count()
                                })
                                .ToList();
                            }
                            <script>
                                var modelList = @Html.Raw(Json.Serialize(countByStatus));
                            </script>
                            @{
                                foreach(var status in countByStatus)
                                {
                                    <input type="hidden" id="@status.ApplicationStatus" value= @status.Count/>
                                }
                            }
                        </div>
                    </div>
                </div>
                <div class="col-8 mb-3">
                    <div class="dashboard-cards bottom-card p-3">
                        <div class="d-flex justify-content-between">
                            <h3 class="card-title">UPCOMING INTERVIEWS</h3>
                            @if (Model.Interviews.Count() > 0)
                            {
                                <a asp-controller="Hr" asp-action="Interviews">
                                    <p class="d-flex view-all m-0 ms-auto">
                                        View All
                                        <i class='bx bx-chevron-right fs-3'></i>
                                    </p>
                                </a>
                            }
                        </div>
                        <!-- Only a maximum of 6 rows can be added ,pls -->
                        <table class="table mt-3">
                            <thead>
                                <tr class="table-header text-center">
                                    <th scope="col" class="col-3">Date and Time</th>
                                    <th scope="col" class="col-3">Interviewer</th>
                                    <th scope="col" class="col-3">Applicant</th>
                                    <th scope="col" class="col-3">Interview Type</th>
                                </tr>
                            </thead>
                            <tbody class="text-center">
                                @if(Model.Interviews.Count() == 0)
                                {
                                    <tr>
                                        <td colspan="6">NO INTERVIEWS</td>
                                    </tr>
                                }
                                else
                                {
                                    @foreach (var interview in Model.Interviews)
                                    {
                                        <tr>
                                            <td>@interview.InterviewDate.ToString("MMMM dd, yyyy"), @interview.TimeStart - @interview.TimeEnd</td>
                                            <td>@interview.Interviewer</td>
                                            <td>@interview.Applicant.Name</td>
                                            <td>@EnumHelper.GetEnumDescription(interview.InterviewType)</td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="~/js/applicant-chart.js" asp-append-version="true"></script>
</body>

<script>
    //A band-aid solution for adjusting the header width
    setInterval(function () { 
        var width = document.getElementById("container").offsetWidth;
        document.getElementById('header').style.width = width + "px";
    }, 100);
</script>